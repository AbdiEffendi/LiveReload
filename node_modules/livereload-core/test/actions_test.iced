{ ok, deepEqual } = require 'assert'

{R} = require "../#{process.env.JSLIB or 'lib'}/session"
actionsPlugin = require "../#{process.env.JSLIB or 'lib'}/plugins/actions"


class JerryAction
  schema:
    $extends: 'Action'

class JerryActionInstance

  schema:
    $extends: 'ActionInstance'

  'compute_defaultRules': ->
    [1, 2, 3]



describe.only "Actions System", ->

  beforeEach ->
    @universe = new R.Universe()

  it "woots", (done) ->
    @universe.define(actionsPlugin.definitions, [JerryAction, JerryActionInstance])
    await @universe.performAndWait =>
      @jerryAction = @universe.create('JerryAction')
      @jerryActionInstance = @universe.create('JerryActionInstance', action: @jerryAction)
    , defer()

    deepEqual @jerryActionInstance.defaultRules, [1, 2, 3]
    done()
