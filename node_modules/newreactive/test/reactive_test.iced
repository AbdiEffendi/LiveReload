{ ok, equal, deepEqual } = require 'assert'
_ = require 'underscore'
R = require "../#{process.env.JSLIB or 'lib'}/reactive"


Object.defineProperty R.Universe::, 'kindNames', get: ->  _.pluck(@kinds, 'kind').sort()


describe 'R', ->

  it "exports VERSION", ->
    ok R.VERSION.match /^\d+\.\d+\.\d+$/


describe 'R.Universe', ->
  beforeEach -> @universe = new R.Universe()
  afterEach  -> @universe.dispose(); delete @universe

  describe '#register(klass)', ->

    describe "given a regular class", ->
      class MyApp
      beforeEach -> @universe.register(MyApp)

      it "registers a kind matching the given class name", ->
        deepEqual @universe.kindNames, ['MyApp']

      it "adds the given class to the list of the kind's mixins", ->
        deepEqual @universe.kinds.MyApp.klasses, [MyApp]

    describe "given a class with a two-part name like Foo_Bar", ->
      class MyApp_SomeMethods
      beforeEach -> @universe.register(MyApp_SomeMethods)

      it "uses only the first part as the entity kind", ->
        deepEqual @universe.kindNames, ['MyApp']

    describe "given multiple classes for the same entity", ->
      class MyApp_SomeMethods
      class MyApp_OtherMethods
      beforeEach -> @universe.register(MyApp_SomeMethods)
      beforeEach -> @universe.register(MyApp_OtherMethods)

      it "merges them into a single entity kind", ->
        deepEqual @universe.kindNames, ['MyApp']
