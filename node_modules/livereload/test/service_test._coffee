{ ok, equal } = require 'assert'


[
  # ...
  {
    "ord": 1,
    "session":
  }
]


describe.only "#Services", ->

  describe "Compass detection service", ->


    compassAnalyzer = (ctx) ->
      fileSet = ctx.query('filesByPath', { path: '*.{sass,scss}' }, include: ['path', 'importedFragments'])

      ctx.forEach fileSet, (ctx, file) ->
        ctx.query('')


      # a) multiquery
      # b) subcontext
      # c) subquery/subaction?

      connection.query('importsByFile', file: (f.path in fileSet.files))



    class CompassProjectAnalysis extends DataSet
      constructor: (@send) ->

      analyze: (arg, done) ->
        files = @query('filesByPath', path: '*.{sass,scss}')


        for file in arg.files
          data = @query('imports', file: file._id)
          if data._fresh
            for import in data.imports
              if import.match /compass|ZURB-foundation/
                co





    CompassDetector.subscription = {
      "files": [
        {
          "$select": ["path", "importedFragments"],
          "path": { "$match": "*.sass" }
        }
      ]
    }

    CompassDetector.queries = [
      { collection: "files", id: "byPath", path: "config/compass.rb,.compass/config.rb,config/compass.config,config.rb,src/config.rb}" }
    ]


    it "should woot", ->
      ok yes
