module.exports =
class PostProcStep

  constructor: (@project) ->
    @id = 'postproc'
    @queue = @project.session.queue

  initialize: () ->
    @queue.register { action: 'postproc' }, { idKeys: ['project', 'action'] }, @perform.bind(@)

  isAwaitingGracePeriod: ->
    (@project.postprocLastRunTime > 0) and (Date.now() < @project.postprocLastRunTime + @project.postprocGracePeriod)

  isPostProcessingActive: ->
    @project.postprocEnabled && @project.postprocCommand

  schedule: (queue) ->
    @queue.add { project: @project.id, action: 'postproc' }

  perform: (request, done) ->
    return done(null) unless @isPostProcessingActive()
    if !@isAwaitingGracePeriod()
      await @runPostproc defer(err)
      @project.postprocLastRunTime = Date.now()
      done(err)
    else
      LR.console.puts "Skipping post-processing: grace period of #{@project.postprocGracePeriod} ms hasn't expired"
      done(null)

  runPostproc: (callback) ->
    callback()
